struct lista 
{
	struct registro dadoLis;
	struct lista* ant;
	struct lista* prox;
};
typedef struct lista Lista;

// Cria nova lista vazia (igual a NULL).
Lista* lde_cria();

// Insere novo nó depois do nó p.
void lde_insere_depois(Lista *p, Lista *novo);

// Insere novo nó antes do nó p.
void lde_insere_antes(Lista *p, Lista *novo);

// Insere novo nó no início da lista l com valor v.
Lista* lde_insere_ini(Lista *l, struct registro v);

// Libera a memória alocada para os nós da lista l.
void lde_libera(Lista *l);

// Imprime valores armazenados na lista l.
void lde_imprime(Lista *l);

// Retorna 1 se a lista l está vazia, e 0 caso contrário.
int lde_vazia(Lista *l);

// Retorna endereço do 1o nó na lista l que contém o valor v.
Lista* lde_busca(Lista *l, struct registro v);

// Retira da lista l o 1o nó com valor v. Retorna lista modificada.
Lista* lde_remove(Lista *l, Lista *p);

// Retorna 1 se l1 e l2 possuem os mesmos valores armazenados (na mesma ordem), 0 caso contrário.
int lde_igual(Lista *l1, Lista *l2);
